# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

<<<<<<< HEAD
from typing import List, Union, Optional
=======
from typing import List, Union
>>>>>>> 298b180593eec7888be759fd446b324f2cd91908
from typing_extensions import Literal, Annotated, TypeAlias

from ..._utils import PropertyInfo
from ..._models import BaseModel

<<<<<<< HEAD
__all__ = [
    "ResponseOutputText",
    "Annotation",
    "AnnotationFileCitation",
    "AnnotationURLCitation",
    "AnnotationContainerFileCitation",
    "AnnotationFilePath",
    "Logprob",
    "LogprobTopLogprob",
]
=======
__all__ = ["ResponseOutputText", "Annotation", "AnnotationFileCitation", "AnnotationURLCitation", "AnnotationFilePath"]
>>>>>>> 298b180593eec7888be759fd446b324f2cd91908


class AnnotationFileCitation(BaseModel):
    file_id: str
    """The ID of the file."""

    index: int
    """The index of the file in the list of files."""

    type: Literal["file_citation"]
    """The type of the file citation. Always `file_citation`."""


class AnnotationURLCitation(BaseModel):
    end_index: int
    """The index of the last character of the URL citation in the message."""

    start_index: int
    """The index of the first character of the URL citation in the message."""

    title: str
    """The title of the web resource."""

    type: Literal["url_citation"]
    """The type of the URL citation. Always `url_citation`."""

    url: str
    """The URL of the web resource."""


<<<<<<< HEAD
class AnnotationContainerFileCitation(BaseModel):
    container_id: str
    """The ID of the container file."""

    end_index: int
    """The index of the last character of the container file citation in the message."""

    file_id: str
    """The ID of the file."""

    start_index: int
    """The index of the first character of the container file citation in the message."""

    type: Literal["container_file_citation"]
    """The type of the container file citation. Always `container_file_citation`."""


=======
>>>>>>> 298b180593eec7888be759fd446b324f2cd91908
class AnnotationFilePath(BaseModel):
    file_id: str
    """The ID of the file."""

    index: int
    """The index of the file in the list of files."""

    type: Literal["file_path"]
    """The type of the file path. Always `file_path`."""


Annotation: TypeAlias = Annotated[
<<<<<<< HEAD
    Union[AnnotationFileCitation, AnnotationURLCitation, AnnotationContainerFileCitation, AnnotationFilePath],
    PropertyInfo(discriminator="type"),
]


class LogprobTopLogprob(BaseModel):
    token: str

    bytes: List[int]

    logprob: float


class Logprob(BaseModel):
    token: str

    bytes: List[int]

    logprob: float

    top_logprobs: List[LogprobTopLogprob]


=======
    Union[AnnotationFileCitation, AnnotationURLCitation, AnnotationFilePath], PropertyInfo(discriminator="type")
]


>>>>>>> 298b180593eec7888be759fd446b324f2cd91908
class ResponseOutputText(BaseModel):
    annotations: List[Annotation]
    """The annotations of the text output."""

    text: str
    """The text output from the model."""

    type: Literal["output_text"]
    """The type of the output text. Always `output_text`."""
<<<<<<< HEAD

    logprobs: Optional[List[Logprob]] = None
=======
>>>>>>> 298b180593eec7888be759fd446b324f2cd91908
